[{"title":"1.链表合并","url":"/2021/12/31/1-%E9%93%BE%E8%A1%A8%E5%90%88%E5%B9%B6/","content":"已有a、b两个链表，每个链表中的结点包括学号、成绩。要求把两个链表合并，按学号升序排列。\n输入\n第一行，a、b两个链表元素的数量N、M,用空格隔开。 接下来N行是a的数据 然后M行是b的数据 每行数据由学号和成绩两部分组成\n输出\n按照学号升序排列的数据\n样例输入复制\n2 35 1006 893 824 952 10\n\n样例输出复制\n2 103 824 955 1006 89\n\n\n思路  先合并链表，然后使用选择法排序，对结构体中的内容进行交换，最后输出\n#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;typedef struct student&#123;//定义节点类型 \tint num;\tfloat score;\tstruct student *next;&#125;stu,*Student; Student creat(int length)&#123;\tstu *L;\tL = (stu *)malloc(sizeof(stu));\tL-&gt;next = NULL;\tstu *r;\tr = L;//使用一个尾指针 \tint i;\tfor(i=0;i&lt;length;i++)\t&#123;\t\tstu *p;//使用尾插法建立链表 \t\tp = (stu *)malloc(sizeof(stu));\t\tscanf(&quot;%d&quot;,&amp;(p-&gt;num));\t\tscanf(&quot;%f&quot;,&amp;(p-&gt;score));\t\tr-&gt;next = p;\t\tr = p;\t&#125;\tr-&gt;next = NULL; \treturn L;&#125;Student sort(Student L1,Student L2)//先合并再排序 &#123;\tStudent temp;\ttemp = L1;\twhile(L1-&gt;next != NULL)\t&#123;\t\tL1 = L1-&gt;next;\t&#125;\t L1-&gt;next = L2-&gt;next;//将第一个链表的尾接到第二个链表的头\t free(L2);//L2的头结点为空，将其free \t stu *p,*q,t;\t for(p = temp-&gt;next;p != NULL;p = p-&gt;next)//使用选择法排序，对结构体中的学号和分数进行排序 \t &#123;\t \tfor(q = p-&gt;next;q != NULL;q = q-&gt;next)\t \t&#123;\t \t\tif(p-&gt;num &gt; q-&gt;num)\t \t\t&#123;\t \t\t\tt.num = p-&gt;num;\t \t\t\tp-&gt;num = q-&gt;num;\t \t\t\tq-&gt;num = t.num;\t \t\t\tt.score = p-&gt;score;\t \t\t\tp-&gt;score = q-&gt;score;\t \t\t\tq-&gt;score = t.score;\t\t\t&#125;\t\t&#125;\t &#125;\t return temp; \t //我是个傻子啊啊啊啊啊啊啊怎么会想到这么写，这是指针啊！循环条件都不对！\t /*int i,j,t1,t2;  \t for(i=0;i&lt;length;i++)\t &#123;\t \tfor(j=0;j&lt;length-j-1;j++)\t \t&#123;\t \t\tif(temp-&gt;num &gt; temp-&gt;next-&gt;num)//使用冒泡法对结构体中的学号进行排序，并交换学号和分数 \t \t\t&#123;\t \t\t\tt1 = temp-&gt;num;\t\t\t\ttemp-&gt;num = temp-&gt;next-&gt;num;\t\t\t\ttemp-&gt;num = t2;\t\t\t\tt2 = temp-&gt;score;\t\t\t\ttemp-&gt;score = temp-&gt;next-&gt;score;\t\t\t\ttemp-&gt;next-&gt;score = t2;\t\t\t&#125;\t\t&#125;\t &#125;*/&#125;int main()&#123;\tint x,y;\tscanf(&quot;%d%d&quot;,&amp;x,&amp;y);\tStudent a = creat(x);\tStudent b = creat(y);\tStudent c = sort(a,b);    if(c)&#123;\twhile(c-&gt;next!= NULL)&#123;\t\tc = c-&gt;next;\t\tprintf(&quot;%d %.0f\\n&quot;,c-&gt;num,c-&gt;score);\t\t\t&#125;  &#125;\treturn 0; &#125;\n\n总结\n\n在使用malloc函数给指针分配空间后没有判空\n\n在使用typedef重命名时容易分不清，如本题中的stu，和student，Student\n\n我这次是这样写的p = (student *)malloc(sizeof(Student));scanf(“%d”,&amp;x);scanf(“%f”,&amp;y);\n 琨琨说一般这样写，虽然我写的也没错p-&gt;num=xp-&gt;score=y\n\n头结点为空，在遍历，循环的时候应该注意\n\n\n最后！其实这道题不难，但是因为好久没有学习了，所以就花了很长时间，敲代码也没有思路，要应以为戒！\n万事开头难啊真的是！\n"},{"title":"Hello World","url":"/2021/12/29/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"hello哇","url":"/2021/12/31/hello%E5%93%87/","content":"欢迎来到苹果的小世界^~^\n"}]